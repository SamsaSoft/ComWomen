@page
@model Admin.Pages.Medias.CreateModel
@using Core.Enums
@{
    ViewData["Title"] = "Create";
}

<h1>Create media</h1>

<div class="text-danger text-opacity-75" asp-validation-summary="All">

</div>
<div class="row">
    <div class="col">
        <form method="post" class="text-center" enctype="multipart/form-data" id="post_form">
            <div class="card">
                <div class="card-header d-flex justify-content-between">
                    <ul class="nav nav-pills card-header-pills">
                        @foreach (var lang in Model.ActiveLanguages)
                        {
                            <li class="nav-item">
                                <a id='@($"lang_nav_{lang}")' data-lang='@lang' class="nav-link lang_nav" aria-current="true" href="#">@lang</a>
                            </li>
                        }
                    </ul>
               
                </div>
                <input hidden asp-for="@Model.Media.MediaTypeId" />
                @foreach (var trans in Model.Media.MediaTranslations)
                {
                    <div id='@($"lang_body_{trans.LanguageId}")' data-lang='@(trans.LanguageId)' class="lang_body card-body">
                        <input hidden asp-for="@trans.LanguageId" />

                        <label asp-for="@trans.Title" class="control-label"></label>
                        <input asp-for="@trans.Title" class="form-control" />
                        <span asp-validation-for="@trans.Title" class="text-danger"></span>

                        <label asp-for="@trans.Description" class="control-label"></label>
                        <textarea type="text" rows="3" asp-for="@trans.Description" class="form-control"></textarea>
                        <span asp-validation-for="@trans.Description" class="text-danger"></span>
                        <br />
                            
                        <input asp-for="@Model.Files[trans.LanguageId]" type="file" class="form-control select_file" id='@($"select_file_{trans.LanguageId}")' />
                        <input hidden name="Files[@trans.LanguageId].Key" value="@trans.LanguageId" />
                        <span asp-validation-for="@trans.Url" class="text-danger"></span>
                        <div id='@($"preview_file_{trans.LanguageId}")' class="preview">
                            <p>No files currently selected for upload</p>
                        </div>
                    </div>
                }
                <input type="submit" class="btn btn-primary m-3" value="Create" id="submit_create" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/media.js" asp-append-version="true"></script>
    <script>
        $.validator.setDefaults({ ignore: '' });

        function setActiveMediaFilter(filterType)
        {
            selectedMediaTypes = {image: false, audio: false, video: false};
            selectedMediaTypes[filterType] = true;
            UpdateMediaType();
        }

        function UpdateMediaType() {
            var filter = '';
            if (selectedMediaTypes.image) {
                filter += 'image/*,';
            }
            if (selectedMediaTypes.audio) {
                filter += 'audio/*,';
            }
            if (selectedMediaTypes.video) {
                filter += 'video/*,';
            }
            if (filter != "") {
                filter = filter.substring(0, filter.length - 1);
            }
            //var filter = 'audio/*,video/*,image/*,MIME_type';
            $('.select_file').attr('accept', filter);
        }

        function hasAttr(jobj, attr)
        {
            var checkAttr = jobj.attr(attr)
            if (typeof checkAttr !== 'undefined' && checkAttr !== false) {
                return true;
            }
            return false;
        }

        $(document).ready(function () {
            $('#submit_create').attr('disabled', true);
            
            $('#post_form').on('change', function () {
                $('#submit_create').attr('disabled', !$('#post_form').valid());
            });
            
            initTabs(UpdateMediaType, UpdateMediaType);

            $('.select_file').on("change", function(){ 
                    var data = JSON.stringify( $('#post_form').serializeArray() );
                    var preview = $(`#preview_file_${activeFormLanguage}`);
                    preview.children().remove();
                    var mediaType = this.files[0].type;
                    var mediaClass = mediaType.split('/')[0];
                    setActiveMediaFilter(mediaClass);
                    if (!selectedMediaTypes[mediaClass]) {
                        this.value = this.defaultValue;
                        preview.prepend("<p>This file type cannot be selected</p>");
                        return;
                    }
                    var htmlTag = createmediafromclass(mediaClass, window.URL.createObjectURL(this.files[0]));
                    preview.prepend(htmlTag);
            });


        });
    </script>
}