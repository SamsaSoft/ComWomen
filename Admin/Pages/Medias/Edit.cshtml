@page "{mediaid}"
@using Core.Services
@model Admin.Pages.Medias.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<div class="text-danger text-opacity-75" asp-validation-summary="All">

</div>

<div class="row">
    <div class="col">
        <div class="card">
            <div class="card-header">
                <ul class="nav nav-pills card-header-pills">
                    @foreach (var lang in Settings.ActiveLanguages)
                    {
                        <li class="nav-item">
                            <a id='@($"lang_nav_{lang}")' data-lang='@lang' class="nav-link lang_nav" aria-current="true" href="#">@lang</a>
                        </li>
                    }
                </ul>
            </div>
            <form method="post" class="text-center" enctype="multipart/form-data">
                <input hidden asp-for="@Model.Media.Id" />
                <input hidden asp-for="@Model.Media.MediaType" />
                @for (var i = 0; i < Model.Media.Translations.Count; i++)
                {
                    <div id='@($"lang_body_{Model.Media.Translations[i].Language}")' data-lang='@(Model.Media.Translations[i].Language)' class="lang_body card-body">
                        <input hidden asp-for="@Model.Media.Translations[i].Id" />
                        <input hidden asp-for="@Model.Media.Translations[i].Language" />

                        <label asp-for="@Model.Media.Translations[i].Title" class="control-label"></label>
                        <input asp-for="@Model.Media.Translations[i].Title" class="form-control" />
                        <span asp-validation-for="@Model.Media.Translations[i].Title" class="text-danger"></span>

                        <label asp-for="@Model.Media.Translations[i].Description" class="control-label"></label>
                        <textarea rows="3" asp-for="@Model.Media.Translations[i].Description" class="form-control"></textarea>
                        <span asp-validation-for="@Model.Media.Translations[i].Description" class="text-danger"></span>

                        <input asp-for="@Model.Media.Translations[i].File" data-url="@Model.Media.Translations[i].Url" type="file" class="form-control select_file" accept="@FileService.MediaTypeIdToClassName(Model.Media.MediaType)/*" id='@($"select_file_{Model.Media.Translations[i].Language}")' />
                        <input hidden asp-for="@Model.Media.Translations[i].Url" />
                        <input hidden name="Files[@Model.Media.Translations[i].Language].Key" value="@Model.Media.Translations[i].Language" />
                        <div id='@($"preview_file_{Model.Media.Translations[i].Language}")' class="preview">
                            <p>No files currently selected for upload</p>
                        </div>
                    </div>
                }
                <input type="submit" class="btn btn-primary m-3" value="Update" />
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/media.js" asp-append-version="true"></script>
    <script>
        let directoryDictonaries = @(Json.Serialize(Model.MediaDirectoryDictionary));
        let mediaClass = '@Model.MediaTypeIdToClassName(Model.Media.MediaType)';
        function initMedia(inputChanged) {
            var inputFile = $(`#select_file_${activeFormLanguage}`).get();
            var url = "";
            if (inputFile[0].files[0] != null) {
                var file = inputFile[0].files[0];
                url = window.URL.createObjectURL(file);
                if (inputChanged) {
                    if (!checkMediaClass(file)) {
                        var preview = $(`#preview_file_${activeFormLanguage}`);
                        preview.children().remove();
                        preview.prepend("<p>This file type cannot be selected</p>");
                        inputFile[0].value = inputFile[0].defaultValue;
                        return;
                    }
                }
            }
            else
            {
                var url = $(inputFile).data('url');
                url = `/${directoryDictonaries[mediaClass]}/${url}`;
            }
            if (url != "") {
                updateMedia(url);
            }
        };

        function checkMediaClass(file) {
            if (file === 'undefined' || file == null) {
                return true;
            }
            var mediaClassFile = file.type.split('/')[0];
            return mediaClass == mediaClassFile;
        }

        function updateMedia(url)
        {
            var preview = $(`#preview_file_${activeFormLanguage}`);
            preview.children().remove();
            var htmlTag = createmediafromclass(mediaClass, url);
            preview.prepend(htmlTag);
            return true;
        }

        $(document).ready(function () {
            initTabs(initMedia, initMedia);
            $('.select_file').on("change", function () {
                initMedia(true);
            });
        });
    </script>
    <partial name="_ValidationScriptsPartial" />
}
